function [coherence] = bgt_coherenceFDR(coherence, alpha, sigTest)
% False discovery rate correction on coherence matrix.
%
% FORMAT [coherence] = bgt_coherenceFDR(coherence, alpha, sigTest)
%
% REQUIRED INPUT:
%   coherence
%       Structure array with the following fields (generated by
%       bgt_coherenceMatrix.m):
%           .uncorrected
%               .associationMatrix     -    Symmetric n x n matrix whose
%                                           elements (i,j) indicate the
%                                           coherence between the ith and
%                                           jth ROIs in your network.
%               .pValues               -    Symmetric n x n matrix whose
%                                           elements (i,j) indicate the
%                                           probability of obtaining the
%                                           coherence value contained in
%                                           associationMatrix(i,j) by
%                                           chance (if the null of no
%                                           association is true).
%
%   alpha
%       Type I error rate. Standard value = .05 for FDR correction.
%
%   sigTest
%       Specify whether to use a 'parametric' or 'nonparametric' approach
%       to FDR correction (entered in single quotes). Nonparametric FDR
%       tends to be more conservative, but is perhaps more approprate if
%       p-values were estimated nonparametrically (or if you have reason
%       to suspect that Type I errors are non-normally distributed in
%       your data). If no argument provided, default is 'parametric'.
%
% OUTPUT:
%   coherence
%       Structure array with the following fields:
%           .uncorrected
%               .associationMatrix     -    Symmetric n x n matrix whose
%                                           elements (i,j) indicate the
%                                           coherence between the ith and
%                                           jth ROIs in your network.
%               .pValues               -    Symmetric n x n matrix whose
%                                           elements (i,j) indicate the
%                                           probability of obtaining the
%                                           coherence value contained in
%                                           associationMatrix(i,j) by
%                                           chance (if the null of no
%                                           association is true).
%           .FDR
%               .associationMatrix     -    Symmetric n x n matrix whose
%                                           elements (i,j) indicate the
%                                           coherence between the ith and
%                                           jth ROIs in your network,
%                                           thresholded for multiple
%                                           comparisons via FDR.
%__________________________________________________________________________
%
% This function will apply an FDR correction to a coherence matrix,
% thresholding out nonsignificant connections. Skip this step if you want
% to compute network statistics on a fully-dense graph. Otherwise this
% accounts for the fact that we are running (n^2 - n)/2 statistical tests
% (where n = number of ROIs), which clearly inflates the probability of
% incorrectly identifying significant connections between brain regions.
%__________________________________________________________________________
%
% BRAIN GRAPHS: A toolbox for graph theoretic analyses of fMRI data, v1.03
% Author:
%   Tyler Santander (t.santander@psych.ucsb.edu)
%   Institute for Collaborative Biotechnologies
%   Department of Psychological & Brain Sciences
%   University of California, Santa Barbara
%   December 2018
%__________________________________________________________________________

% Check arguments, specify default alpha/sigTest if necessary.
%--------------------------------------------------------------------------

    if (nargin == 1), alpha = .05; sigTest = 'parametric'; end
    if (nargin == 2), sigTest = 'parametric'; end
    
    disp(['|| Applying false discovery rate (FDR) correction at q < ' num2str(alpha) '...']);        

    
% Extract p-values from upper triangle of the symmetric connectivity matrix
% (ignoring the diagonal of self-connections) and determine FDR cutoff.
%--------------------------------------------------------------------------

    associationMatrix = coherence.uncorrected.associationMatrix;
    pValues           = coherence.uncorrected.pValues;
    pVect             = pValues(~tril(ones(size(pValues))));
    pFDR              = fdr(pVect, alpha, sigTest);

    
% Apply correction.
%--------------------------------------------------------------------------
    
    associationMatrix(pValues > pFDR) = 0;
    coherence.FDR.associationMatrix   = associationMatrix;

    
% Save coherence structure.
%--------------------------------------------------------------------------

    save('coherence', 'coherence');
    disp('|| FDR correction complete');

end